<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fz.abaoworld.dal.dao.ProblemDao">
  <resultMap id="BaseResultMap" type="com.fz.abaoworld.dal.entity.ProblemEntity">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="pro_title" jdbcType="VARCHAR" property="proTitle" />
    <result column="pro_type" jdbcType="VARCHAR" property="proType" />
    <result column="pro_degree" jdbcType="VARCHAR" property="proDegree" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fz.abaoworld.dal.entity.ProblemEntity">
    <result column="pro_content" jdbcType="LONGVARCHAR" property="proContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, member_id, pro_title, pro_type, pro_degree, create_time, modify_time
  </sql>
  <sql id="Blob_Column_List">
    pro_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from problem
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.fz.abaoworld.dal.entity.ProblemEntity">
    insert into problem (id, member_id, pro_title, 
      pro_type, pro_degree, create_time, 
      modify_time, pro_content)
    values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=VARCHAR}, #{proTitle,jdbcType=VARCHAR}, 
      #{proType,jdbcType=VARCHAR}, #{proDegree,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{proContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fz.abaoworld.dal.entity.ProblemEntity">
    insert into problem
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="proTitle != null">
        pro_title,
      </if>
      <if test="proType != null">
        pro_type,
      </if>
      <if test="proDegree != null">
        pro_degree,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="proContent != null">
        pro_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="proTitle != null">
        #{proTitle,jdbcType=VARCHAR},
      </if>
      <if test="proType != null">
        #{proType,jdbcType=VARCHAR},
      </if>
      <if test="proDegree != null">
        #{proDegree,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proContent != null">
        #{proContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fz.abaoworld.dal.entity.ProblemEntity">
    update problem
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="proTitle != null">
        pro_title = #{proTitle,jdbcType=VARCHAR},
      </if>
      <if test="proType != null">
        pro_type = #{proType,jdbcType=VARCHAR},
      </if>
      <if test="proDegree != null">
        pro_degree = #{proDegree,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proContent != null">
        pro_content = #{proContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fz.abaoworld.dal.entity.ProblemEntity">
    update problem
    set member_id = #{memberId,jdbcType=VARCHAR},
      pro_title = #{proTitle,jdbcType=VARCHAR},
      pro_type = #{proType,jdbcType=VARCHAR},
      pro_degree = #{proDegree,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      pro_content = #{proContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fz.abaoworld.dal.entity.ProblemEntity">
    update problem
    set member_id = #{memberId,jdbcType=VARCHAR},
      pro_title = #{proTitle,jdbcType=VARCHAR},
      pro_type = #{proType,jdbcType=VARCHAR},
      pro_degree = #{proDegree,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 查询交易流水列表 -->
  <select id="queryProList" parameterType="map" resultMap="ResultMapWithBLOBs">
  	SELECT
		*
	FROM
		problem
	WHERE
		1 = 1
	<if test="proId != null">
		AND	id = #{proId}
	</if>
	<if test="proType != null">
	 and pro_type = #{proType}
	</if>
	<if test="proTitle != null">
	 and pro_title like CONCAT('%',#{proTitle},'%' ) 
	</if>
	<if test="proContent != null">
	 and pro_content like CONCAT('%',#{proContent},'%' ) 
	</if>
	<if test="memberId != null">
	 and member_id = #{memberId}
	</if>
	<if test="proDegree != null">
	 and pro_degree = #{proDegree}
	</if>
	<![CDATA[
	and DATE_FORMAT(
		create_time,
		'%Y%m%d%H%i%s'
	) >= #{startTime}
	
	and DATE_FORMAT(
		create_time,
		'%Y%m%d%H%i%s'
	) <= #{endTime}
	]]>
	order by create_time desc limit #{start}, #{end}
  </select>
  
   <!-- 查询交易流水列表 -->
  <select id="queryProListTotalCount" parameterType="map" resultType="int">
  	SELECT
		count(1)
	FROM
		problem
	WHERE
		1 = 1
	<if test="proId != null">
		AND	id = #{proId}
	</if>
	<if test="proType != null">
	 and pro_type = #{proType}
	</if>
	<if test="proTitle != null">
	 and pro_title like CONCAT('%',#{proTitle},'%' ) 
	</if>
	<if test="proContent != null">
	 and pro_content like CONCAT('%',#{proContent},'%' ) 
	</if>
	<if test="memberId != null">
	 and member_id = #{memberId}
	</if>
	<if test="proDegree != null">
	 and pro_degree = #{proDegree}
	</if>
	<![CDATA[
	and DATE_FORMAT(
		create_time,
		'%Y%m%d%H%i%s'
	) >= #{startTime}
	
	and DATE_FORMAT(
		create_time,
		'%Y%m%d%H%i%s'
	) <= #{endTime}
	]]>

  </select>
  
</mapper>